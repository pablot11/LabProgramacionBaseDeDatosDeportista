<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>